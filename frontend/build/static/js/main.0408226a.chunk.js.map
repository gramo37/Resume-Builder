{"version":3,"sources":["../src lazy groupOptions: {} namespace object","App.js","reportWebVitals.js","redux/reducers/pdfReducer.js","redux/reducers/storeInfoReducer.js","store.js","index.js"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","DashBoard","React","lazy","Template","Error404","Templates","App","fallback","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","pdfReducers","createReducer","RequirePDF","state","loading","data","error","PDFSuccess","action","payload","PDFFail","storeInfoReducer","JSON","parse","localStorage","getItem","RequireStoreInfo","StoreInfoSuccess","StoreInfoFail","store","configureStore","reducer","pdf","info","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kJAAA,SAASA,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAOC,QAAUV,EACjBA,EAAyBW,GAAK,I,oHCHxBC,EAAYC,IAAMC,MAAK,kBAAM,iCAC7BC,EAAWF,IAAMC,MAAK,kBAAM,uDAC5BE,EAAWH,IAAMC,MAAK,kBAAM,iCAC5BG,EAAYJ,IAAMC,MAAK,kBAAM,iCAkCpBI,MA1BI,WAEjB,OACE,mCACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,4CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAACV,EAAD,MAC/B,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,aAAaC,QAAS,cAACL,EAAD,MACxC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,6BAA6BC,QAAS,cAACP,EAAD,MAExD,cAAC,IAAD,CAAOM,KAAK,IAAIC,QAAS,cAACN,EAAD,gBCnBtBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCLDO,EAAcC,YAAc,GAAG,CACxCC,WAAY,SAACC,GACTA,EAAMC,SAAU,EAChBD,EAAME,KAAO,GACbF,EAAMG,MAAQ,IAElBC,WAAY,SAACJ,EAAOK,GAChBL,EAAMC,SAAU,EAChBD,EAAME,KAAOG,EAAOC,QACpBN,EAAMG,MAAQ,IAElBI,QAAS,SAACP,EAAOK,GACbL,EAAMC,SAAU,EAChBD,EAAME,KAAO,GACbF,EAAMG,MAAQE,EAAOC,WCdhBE,EAAmBV,YAAc,CAE1CI,KAAMO,KAAKC,MAAMC,aAAaC,QAAQ,cACvC,CACCC,iBAAkB,SAACb,GACfA,EAAMC,SAAU,EAChBD,EAAME,KAAO,GACbF,EAAMG,MAAQ,IAElBW,iBAAkB,SAACd,EAAOK,GACtBL,EAAMC,SAAU,EAChBD,EAAME,KAAOG,EAAOC,QACpBN,EAAMG,MAAQ,IAElBY,cAAe,SAACf,EAAOK,GACnBL,EAAMC,SAAU,EAChBD,EAAME,KAAO,GACbF,EAAMG,MAAQE,EAAOC,WCRdU,EAPDC,YAAe,CACzBC,QAAS,CACLC,IAAKtB,EACLuB,KAAMZ,KCEda,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BpC,M","file":"static/js/main.0408226a.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 37;","import React, { Suspense } from 'react'\r\nimport \"./app.css\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes\r\n} from \"react-router-dom\"\r\nimport { lazyLoad } from './lazyLoad.js';\r\n\r\nconst DashBoard = React.lazy(() => import(\"./components/DashBoard/DashBoard\"));\r\nconst Template = React.lazy(() => import(\"./components/Templates/Template\"));\r\nconst Error404 = React.lazy(() => import(\"./components/404/Error404\"));\r\nconst Templates = React.lazy(() => import(\"./components/Templates/Templates\"));\r\n// const Templates = lazyLoad(\"./components/Templates/Templates\");\r\n\r\n// React lazy for named import\r\n// const About = React.lazy(() => import(\"./components/About\").then(module => {\r\n//   return { default: module.About }\r\n// }))\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Suspense fallback={<h1>Loading ..</h1>}>\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<DashBoard />} />\r\n            <Route exact path=\"/templates\" element={<Templates />} />\r\n            <Route exact path=\"/create-resume/:resumeType\" element={<Template />} />\r\n            {/* <Route exact path=\"/create-resume/:resumeType\" element={<PdfContainer />} /> */}\r\n            <Route path=\"*\" element={<Error404 />} />\r\n          </Routes>\r\n        </Suspense>\r\n      </Router>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nfunction wait(time) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, time);\r\n  })\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createReducer} from \"@reduxjs/toolkit\";\r\n\r\nexport const pdfReducers = createReducer({},{\r\n    RequirePDF: (state) => {\r\n        state.loading = true\r\n        state.data = \"\"\r\n        state.error = \"\"\r\n    },\r\n    PDFSuccess: (state, action) => {\r\n        state.loading = false\r\n        state.data = action.payload\r\n        state.error = \"\"\r\n    },\r\n    PDFFail: (state, action) => {\r\n        state.loading = false\r\n        state.data = \"\"\r\n        state.error = action.payload\r\n    }\r\n})","import {createReducer} from \"@reduxjs/toolkit\"\r\n\r\nexport const storeInfoReducer = createReducer({\r\n    // Get data from local storage and set it equal to state.data\r\n    data: JSON.parse(localStorage.getItem(\"UserInfo\"))\r\n}, {\r\n    RequireStoreInfo: (state) => {\r\n        state.loading = true\r\n        state.data = \"\"\r\n        state.error = \"\"\r\n    },\r\n    StoreInfoSuccess: (state, action) => {\r\n        state.loading = false\r\n        state.data = action.payload\r\n        state.error = \"\"\r\n    },\r\n    StoreInfoFail: (state, action) => {\r\n        state.loading = false\r\n        state.data = \"\"\r\n        state.error = action.payload\r\n    }\r\n})","import {configureStore} from \"@reduxjs/toolkit\"\r\nimport { pdfReducers } from \"./redux/reducers/pdfReducer\";\r\nimport { storeInfoReducer } from \"./redux/reducers/storeInfoReducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        pdf: pdfReducers,\r\n        info: storeInfoReducer\r\n    }\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}